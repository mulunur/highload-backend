version: '3.7'

networks:
  my-network:
    driver: bridge

services:
  pg-0:
    image: bitnami/postgresql-repmgr:14
    ports:
      - 127.0.0.1:5432:5432
    networks:
      - my-network
    volumes:
      - pg_0_data:/bitnami/postgresql
      - ./postgres_files/primary/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=postgres
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=alisaBD
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1
      - REPMGR_NODE_NAME=pg-0
      - REPMGR_NODE_NETWORK_NAME=pg-0
      - REPMGR_PGHBA_TRUST_ALL=yes
  pg-1:
    image: bitnami/postgresql-repmgr:14
    ports:
      - 127.0.0.2:5432:5432
    networks:
      - my-network
    volumes:
      - pg_1_data:/bitnami/postgresql
      - ./postgres_files/primary/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=postgres
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=alisaBD2
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1
      - REPMGR_NODE_NAME=pg-1
      - REPMGR_NODE_NETWORK_NAME=pg-1
      - REPMGR_PGHBA_TRUST_ALL=yes
  
  redis:
    image: bitnami/redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    networks:
      - my-network
    volumes:
      - redis:/data

  pgpool:
    image: bitnami/pgpool:4
    ports:
      - 127.0.0.10:5432:5432
    environment:
      - PGPOOL_BACKEND_NODES=0:pg-0:5432,1:pg-1:5432
      - PGPOOL_SR_CHECK_USER=postgres
      - PGPOOL_SR_CHECK_PASSWORD=postgres
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_POSTGRES_USERNAME=postgres
      - PGPOOL_POSTGRES_PASSWORD=postgres
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=adminpassword
      - PGPOOL_ENABLE_POOL_HBA=no
    depends_on:
      - pg-0
      - pg-1
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my-network

  backend-1:
    build: 
      context: .
    env_file:
      - .development.env
    ports:
      - 127.0.0.1:8888:8888
    depends_on:
      - pgpool
    healthcheck:
      test: /usr/bin/pg_isready -U postgres -h pgpool
      interval: 3s
      timeout: 30s
      retries: 10
    volumes:
      - .:/usr/src/app
    command: npm start
    restart: always
    networks:
      - my-network
 
#  backend-2:
#    build: 
#      context: .
#    env_file:
#      - .development.env
#    ports:
#      - 127.0.0.2:8888:8888
#    depends_on:
#      - pgpool
#    healthcheck:
#      test: /usr/bin/pg_isready -U postgres -h pgpool
#      interval: 3s
#      timeout: 30s
#      retries: 10
#    volumes:
#      - .:/usr/src/app
#    command: npm start
#    restart: always
#    networks:
#      - my-network

#  backend-3:
#    build: 
#      context: .
#    env_file:
#      - .development.env
#    ports:
#      - 127.0.0.3:8888:8888
#    depends_on:
#      - pgpool
#    healthcheck:
#      test: /usr/bin/pg_isready -U postgres -h pgpool
#      interval: 3s
#      timeout: 30s
#      retries: 10
#    volumes:
#      - .:/usr/src/app
#    command: npm start
#    restart: always
#    networks:
#      - my-network

volumes:
  pg_0_data:
    driver: local
  pg_1_data:
    driver: local
  redis:
    driver: local

