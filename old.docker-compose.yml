version: '3.7'

services:
  backend:
    container_name: backend
    build: 
      context: .
    env_file:
      - .development.env
    ports:
      - 3000:3000
    depends_on:
      - db
    volumes:
      - .:/usr/src/app
    command: npm start
    restart: always
 
  db:
    container_name: db
    image: postgres
    env_file:
      - .development.env
    ports:
      - 5432:5432
    volumes:
      - data:/var/lib/pgsql/data
    command: ["postgres", "-c", "config_file=/postgres_configs/primary/postgresql.conf"]
    environment:
      PG_DATA : /var/lib/pgsql/data
      POSTGRES_PASSWORD : postgres
      POSTGRES_DB : alisaBD
      POSTGRES_USER : postgres
    restart: always

  db2:
    container_name: db2
    image: postgres
    env_file:
      - .development.env
    ports:
      - 5433:5432
    volumes:
      - data2:/var/lib/pgsql/data
    command: ["postgres", "-c", "config_file=/postgres_configs/secondary/postgresql.conf"]
    environment:
      PGDATA : /var/lib/pgsql/data
      POSTGRES_PASSWORD : postgres
      POSTGRES_DB : alisaBD2
      POSTGRES_USER : postgres
    restart: always
 
  pgpool1:
    container_name: pgpool1
    image: postgres
    command: pgpool -n -f /usr/local/etc/pgpool.conf
    volumes:
      - ./pgpool1/pgpool.conf:/usr/local/etc/pgpool.conf
    depends_on:
      - db
    restart: always

  pgpool2:
    container_name: pgpool2
    image: postgres
    command: pgpool -n -f /usr/local/etc/pgpool.conf
    volumes:
      - ./pgpool2/pgpool.conf:/usr/local/etc/pgpool.conf
    depends_on:
      - db2
    restart: always
  
volumes:
  data:
  data2:
